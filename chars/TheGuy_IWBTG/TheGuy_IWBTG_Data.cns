; Constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more aBout the cns.

[Data]
life = 1000			;amount of life to start with
power = 9000		;amount of maximum power
attack = 100		;attack power (more is stronger)
defence = 100		;defensive power (more is stronger)
fall.defence_up = 50	;Percentage to increase defense everytime player is knocked down
liedown.time = 60		;Time which player lies down for, Before getting up
airjuggle = 15		;NumBer of points for juggling
sparkno = 2			;Default hit spark numBer for HitDefs
guard.sparkno = 40	;Default guard spark number
KO.echo = 0			;1 to enaBle echo on KO
volume = 0			;Volume offset (negative for softer)
IntPersistIndex = 60	;VariaBles with this index and above will not have their values
FloatPersistIndex = 40  ;reset to 0 Between rounds or matches. There are 60 int variaBles,
  				;indexed from 0 to 59, and 40 float variaBles, indexed from 0 to 39.
  				;If omitted, then it defaults to 60 and 40 for integer and float
  				;variaBles repectively, meaning that none are persistent, i.e. all
  				;are reset. If you want your variaBles to persist Between matches,
  				;you need to override state 5900 from common1.cns.


[Size]
xscale = 1			;Horizontal scaling factor.
yscale = 1			;Vertical scaling factor.
ground.Back = 24 	;Player width (Back, ground)
ground.front = 24		;Player width (front, ground)
air.Back = 24		;Player width (Back, air)
air.front = 24		;Player width (front, air)
height = 72			;Height of player (for opponent to jump over)
attack.dist = 160		;Default attack distance
proj.attack.dist = 90	;Default attack distance for projectiles
proj.doscale = 0		;Set to 1 to scale projectiles too
head.pos = 0, -60	;approximate position of head
mid.pos = 0, -40		;approximate position of midsection
shadowoffset = 0		;NumBer of pixels to vertically offset the shadow
draw.offset = 0,0		;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 3		;Walk forward
walk.Back = -3		;Walk Backward
run.fwd  = 7, 0		;Run forward (x, y)
run.Back = -7,-4	;Hop Backward (x, y)
jump.neu = 0,-10		;Neutral jumping velocity (x, y)
jump.Back = -3		;Jump Back Speed (x, y)
jump.fwd = 3		;Jump forward Speed (x, y)
runjump.Back = -3,-10;Running jump speeds (opt)
runjump.fwd = 3,-10	;.
airjump.neu = 0,-8	;.
airjump.Back = -3	;air jump speeds (opt)
airjump.fwd = 3		;.

[Movement]
airjump.num = 1		;NumBer of air jumps allowed (opt)
airjump.height = 1	;Minimum distance from ground Before you can air jump (opt)
yaccel = .44		;Vertical acceleration
stand.friction = .85	;Friction coefficient when standing
crouch.friction = .82	;Friction coefficient when crouching
