; Jailbot by altoiddealer
;---------------------------------------------------------------------------
;CONSTANTS
;---------------------------------------------------------------------------

[Data]
life = 1000               ;Amount of life to start with
attack = 110               ;attack power (more is stronger)
defence = 120               ;defensive power (more is stronger)
fall.defence_up = 50               ;Percentage to increase defense everyTime player is knocked down
liedown.Time = 50               ;Time which player lies down for, before getting up
airjuggle = 15               ;Number of points for juggling
sparkno = 2               ;Default hit spark number for HitDefs
guard.sparkno = 40               ;Default guard spark number
KO.echo = 0               ;1 to enable echo on KO
IntPersistIndex = 56
FloatPersistIndex = 40

[Size]
xscale = 1           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 30     ;Player width (back, ground)
ground.front = 30    ;Player width (front, ground)
air.back = 26        ;Player width (back, air)
air.front = 26       ;Player width (front, air)
height = 74          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = 2,-100   ;Approximate position of head
mid.pos = 1,-62    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y). Recommended 0,0

[Velocity]
walk.fwd  = 3      ;Walk forward
walk.back = -3     ;Walk backward
run.fwd  = 7,0    ;Run forward (x, y)
run.back = -7,0    ;Hop backward (x, y)
jump.neu = 0,-9.0    ;Neutral jumping velocity (x, y)
jump.back = -3.7,0    ;Jump back Speed (x, y)
jump.fwd = 3.2,0       ;Jump forward Speed (x, y)
runjump.back = -4.4,-8.1 ;Running jump speeds (opt)
runjump.fwd = 4.4,-8.1      ;.
airjump.neu = 0,-8.9      ;.
airjump.back = -2.55      ;Air jump speeds (opt)
airjump.fwd = 2.5         ;.
air.gethit.groundrecover = -.15,-3.5  ;Velocity for ground recovery state (x, y) **MUGEN 1.0**
air.gethit.airrecover.mul = .5,.2     ;Multiplier for air recovery velocity (x, y) **MUGEN 1.0**
air.gethit.airrecover.add = 0,-4.5    ;Velocity offset for air recovery (x, y) **MUGEN 1.0**
air.gethit.airrecover.back = -1       ;Extra x-velocity for holding back during air recovery **MUGEN 1.0**
air.gethit.airrecover.fwd = 0         ;Extra x-velocity for holding forward during air recovery **MUGEN 1.0**
air.gethit.airrecover.up = -2         ;Extra y-velocity for holding up during air recovery **MUGEN 1.0**
air.gethit.airrecover.down = 1.5      ;Extra y-velocity for holding down during air recovery **MUGEN 1.0**

[Movement]
airjump.num = 0       ;Number of air jumps allowed (opt)
airjump.height = 35   ;Minimum distance from ground before you can air jump (opt)
yaccel = .4          ;Vertical acceleration
stand.friction = .5  ;Friction coefficient when standing
crouch.friction = .5 ;Friction coefficient when crouching
stand.friction.threshold = 2          ;If player's speed drops below this threshold while standing, stop his movement **MUGEN 1.0**
crouch.friction.threshold = .05       ;If player's speed drops below this threshold while crouching, stop his movement **MUGEN 1.0**
air.gethit.groundlevel = 20           ;Y-position at which a falling player is considered to hit the ground **MUGEN 1.0**
air.gethit.groundrecover.ground.threshold = -20 ;Y-position below which falling player can use the recovery command **MUGEN 1.0**
air.gethit.groundrecover.groundlevel = 10   ;Y-position at which player in the ground recovery state touches the ground **MUGEN 1.0**
air.gethit.airrecover.threshold = -1  ;Y-velocity above which player may use the air recovery command **MUGEN 1.0**
air.gethit.airrecover.yaccel = .35    ;Vertical acceleration for player in the air recovery state **MUGEN 1.0**
air.gethit.trip.groundlevel = 15      ;Y-position at which player in the tripped state touches the ground **MUGEN 1.0**
down.bounce.offset = 0, 20            ;Offset for player bouncing off the ground (x, y) **MUGEN 1.0**
down.bounce.yaccel = .4               ;Vertical acceleration for player bouncing off the ground **MUGEN 1.0**
down.bounce.groundlevel = 12          ;Y-position at which player bouncing off the ground touches the ground again **MUGEN 1.0**
down.friction.threshold = .05         ;If the player's speed drops below this threshold while lying down, stop his movement **MUGEN 1.0**

;[Quotes]
;victory1 = "101010101"
