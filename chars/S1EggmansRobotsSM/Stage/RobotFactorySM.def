; Definition of The Robot Factory
; by supermystery (http://mugenlair.freesmfhosting.com/index.php) or (www.angelfire.com/moon2/ned)
; credit to Sega for the sprites

;--------------------------------------------------------
[Info]
 ;Name of the stage.
name = "The Old Robot Factory"

;--------------------------------------------------------
[Camera]
 ;Camera starting position: Usually 0 for both
startx = 0
starty = 0

 ;Left and right bound of camera
 ;You may want to fiddle a bit with these values to make sure the
 ;background doesn't move too far or too little
 ;***
boundleft = -200
boundright = 200

 ;High and low bound of camera
 ;High is a negative number. Make is more negative if you want to
 ;camera to be able to move higher.
 ;Low should usually be 0.
 ;If omitted, defaults to -25 and 0 respectively
 ;***
boundhigh = -300
boundlow = 0

 ;This is how much the camera will move vertically towards the
 ;highest player. Valid values are from 0 to 1. A value of 0 will mean
 ;the camera does not move up at all. A value of 1 will makes the camera
 ;follow the highest player.
 ;Typically .2 for normal-sized backgrounds. You may need to pull this
 ;value up for taller backgrounds.
verticalfollow = .9

 ;Minimum vertical distance the highest player has to be from the floor,
 ;before the camera starts to move up to follow him. For extremely
 ;tall stages, a floor tension of about 20-30 coupled with a
 ;vertical-follow of .8 allows the camera to follow the action.
floortension = 50

 ;Horizontal distance player is from edge before camera starts to move
 ;left or right. Typically 50 or 60.
tension = 50


;--------------------------------------------------------
[PlayerInfo]
;--- Player 1 ---
 ;Player 1 starting coordinates.
 ;p1startx is typically -70 and p2startx is 70.
 ;p1starty and p1startz should be 0.
p1startx = -70          ;Starting x coordinates
p1starty = 0            ;Starting y coordinates
p1startz = 0            ;Starting z coordinates
p1facing = 1            ;Direction player faces: 1=right, -1=left

;--- Player 2 ---
p2startx = 70
p2starty = 0
p2startz = 0
p2facing = -1

;--- Common ---
 ;Don't change these values.
leftbound  = -1000 ;Left bound (x-movement)
rightbound =  1000 ;Right bound
topbound  =  0     ;Top bound (z-movement)
botbound  =  0     ;Bottom bound

;--------------------------------------------------------
[Scaling]
 ;No need to change these values
topz     = 0       ;Top z-coordinate for scaling
botz     = 50      ;Bottom z-coordinate for scaling
topscale = 1       ;Scale to use at top
botscale = 1.2     ;Scale to use at bottom

;--------------------------------------------------------
[Bound]
 ;Distance from left/right edge of screen that player can move to
 ;Typically 15
screenleft = 15    ;Dist from left of screen that player can move to
screenright = 15   ;Right edge

;--------------------------------------------------------
[StageInfo]
 ;Z offset for drawing
 ;Adjust this value to move the ground level up/down in the screen.
 ;It's the position where the players stand at.
 ;Up - smaller, Down - larger
 ;***
zoffset = 182

 ;Leave this at 1. It makes the players face each other
autoturn = 1

 ;Set the following to 1 to have the background be reset between
 ;rounds.
resetBG = 1

;--------------------------------------------------------
[Shadow]
 ;This is the shadow darkening intensity. Valid values range from
 ;0 (lightest) to 256 (darkest). Defaults to 128 if omitted.
intensity = 128

 ;This is the shadow color given in r,g,b. Valid values for each
 ;range from 0 (lightest) to 255 (darkest).
 ;Defaults to 0,0,0 if omitted.
 ;intensity and color's effects add up to give the final shadow
 ;result.
color = 0,0,0

 ;This is the scale factor of the shadow. Use a big scale factor
 ;to make the shadow longer. You can use a NEGATIVE scale factor
 ;to make the shadow fall INTO the screen.
 ;Defaults to 0.4 if omitted.
yscale = .3

 ;This parameter lets you set the range over which the shadow is
 ;visible. The first value is the high level, and the second is
 ;the middle level. Both represent y-coordinates of the player.
 ;A shadow is invisible if the player is above the high level,
 ;and fully visible if below the middle level. The shadow is
 ;faded in between the two levels. This gives an effect of the
 ;shadow fading away as the player gets farther away from the
 ;ground. If omitted, defaults to no level effects (shadow is
 ;always fully visible).
fade.range = 0,0

;--------------------------------------------------------
[Reflection]
 ;Intensity of reflection (from 0 to 256). Set to 0 to have no
 ;reflection. Defaults to 0.
intensity = 0

;--------------------------------------------------------
[Music]
 ;Put a filename for a MOD, MP3 or MIDI here, or just leave it
 ;blank if you don't want music. If an invalid filename is
 ;given, then no music will play. To play CD audio, put
 ;the track number followed by ".da". Using a track number of
 ;0 will play a random audio track. For example, to play
 ;track 3 from a music CD, use:
 ;  bgmusic = 3.da
bgmusic = sound/robotnick.mp3

 ;Adjust the volume. 0 is normal, negative for softer, and
 ;positive for louder (only for mp3, mods and CDA)
bgvolume = 0

;========================================================
;--------------------------------------------------------
; Background definition
; ***
;-------------------------------------
; [BG x]
; type = ?       "Normal"/"Parallax"  (def: "normal")
; spriteno = ?, ? Sprite group and number: groupno, imgno  (req'd)
; start = ?, ?   Starting location (integer)  (def: 0, 0)
; delta = ?, ?   Change in location per camera unit moved (float)  (def: 1,1)
; trans = ?      Transparency settings: "none"/"add"/"add1"/"sub"" (def: "none")
; mask = ?       Masking (int): 0 - off, 1 - on  (def: 0)
; velocity = ?, ? Velocity: x, y (float): speed background moves (def: 0, 0)
; tile = ?, ?    Tiling: xtile, ytile (int): 0 - off, 1 - infinite,
;                        >1 - tile that number of times  (def: 0, 0) - only for Normal BG
; tilespacing = ?, ? Tiling: x, y (int) : space between tiles (def: 0, 0)
;  Parallax-only:
; xscale = ?, ?    Top xscale, bottom xscale (float)
; width = ?, ?     Top width, bottom width (int)  (use either this or above, but not both)
; yscalestart = ?  Starting y-scale (float, in percent)  (def: 100)
; yscaledelta = ?  Change in y-scale per unit (float, in percent)  (def: 0)
;-------------------------------------

;-------------------------------------
; Main background definition
[BGdef]
 ;Filename of sprite data
spr = RobotFactorySM.sff

 ;Set to 1 if you want to clear the screen to magenta before
 ;drawing layer 0 (the default background). Good for spotting "holes"
 ;in your background.
 ;Remember to turn this off when you are done debugging the background,
 ;because it slows down performance.
debugbg = 0


;----------
[BG 1 Layer Back BG]
type = Normal
spriteno = 0, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 0, 0
delta = 1, 1
layerno = 0
mask = 0
velocity = 0, 0
tile = 1, 1
tilespacing = 0, 0


[BG 1 Clouds Lowest]
type = Normal
spriteno = 2, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 50, -65
delta = .25, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 200, 0

[BG 1 Clouds Lowest 1]
type = Normal
spriteno = 2, 1 ;Sprite group and number: groupno, imgno  (req'd)
start = 50, -75
delta = .3, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 80, 0


[BG 1 Clouds Lowest 1]
type = Normal
spriteno = 2, 2 ;Sprite group and number: groupno, imgno  (req'd)
start = 0, -85
delta = .35, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 100, 0


[BG 1 Clouds Lowest 1]
type = Normal
spriteno = 2, 4 ;Sprite group and number: groupno, imgno  (req'd)
start = -50, -95
delta = .4, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 80, 0


[BG 1 Clouds Lowest 1]
type = Normal
spriteno = 2, 8 ;Sprite group and number: groupno, imgno  (req'd)
start = -50, -130
delta = .45, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0

;------------------------------

[BG 1 Rocks Lowest 1]
type = Normal
spriteno = 1, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 50, -30
delta = .2, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0

[BG 1 Rocks Lowest]
type = Normal
spriteno = 1, 2 ;Sprite group and number: groupno, imgno  (req'd)
start = 50, 50
delta = .3, .4
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0
;-------------------------------

;----------
[BG 2 Pipe floor]
type = Normal
spriteno = 1, 1 ;Sprite group and number: groupno, imgno  (req'd)
start = 0, 160
delta = 1, 1
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0


[BG 1 Door Front Pipe]
type = Normal
spriteno = 3, 2 ;Sprite group and number: groupno, imgno  (req'd)
start = -354, -20
delta = 1, 1
layerno = 0
mask = 1
velocity = 0, 0
tile = 0, 1
tilespacing = 0, 0

[BG 1 Door Back]
type = Normal
spriteno = 3, 1 ;Sprite group and number: groupno, imgno  (req'd)
start = -370, -20
delta = 1, 1
layerno = 0
mask = 1
velocity = 0, 0
tile = 0, 0
tilespacing = 0, 0

[BG Convyer Belt/Travelator]
type  = anim
actionno = 3
start = 0, 132
delta = 1, 1
mask = 1
velocity = 0, 0
layerno = 0
tile = 1, 0
tilespacing = 254, 0


;-----------------------------------
;Robots
;----------
[BG 1 Grounder]
type = Normal
spriteno = 9, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 150, 92
delta = 1, 1
layerno = 0
mask = 1
velocity = -1, 0
tile = 1, 0
tilespacing = 200, 0

[BG 1 Grounder]
type = Normal
spriteno = 9, 1 ;Sprite group and number: groupno, imgno  (req'd)
start = 100, 111
delta = 1, 1
layerno = 0
mask = 1
velocity = -1, 0
tile = 1, 0
tilespacing = 200, 0

[BG 1 Grounder]
type = Normal
spriteno = 9, 3 ;Sprite group and number: groupno, imgno  (req'd)
start = 0, 116
delta = 1, 1
layerno = 0
mask = 1
velocity = -1, 0
tile = 1, 0
tilespacing = 200, 0

[BG 1 Grounder]
type = Normal
spriteno = 9, 5 ;Sprite group and number: groupno, imgno  (req'd)
start = -50, 107
delta = 1, 1
layerno = 0
mask = 1
velocity = -1, 0
tile = 1, 0
tilespacing = 200, 0

[BG 1 Grounder]
type = Normal
spriteno = 9, 4 ;Sprite group and number: groupno, imgno  (req'd)
start = -50, 100
delta = 1, 1
layerno = 0
mask = 1
velocity = -1, 0
tile = 1, 0
tilespacing = 500, 0


[BG 1 Grounder]
type = Normal
spriteno = 9, 6 ;Sprite group and number: groupno, imgno  (req'd)
start = -100, 105
delta = 1, 1
layerno = 0
mask = 1
velocity = -1, 0
tile = 1, 0
tilespacing = 500, 0

;--------------------------


[BG 1 Door Front]
type = Normal
spriteno = 3, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = -370, -20
delta = 1, 1
layerno = 0
mask = 1
velocity = 0, 0
tile = 0, 0
tilespacing = 0, 0


;-------------------------
;----------
[BG 1 Cage]
type = Normal
spriteno = 8, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 50, 67
delta = .8, 1
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0

[BG 1 Cage]
type = Normal
spriteno = 8, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 50, 115
delta = .8, 1
layerno = 0
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0


;----------
[BG 2 floor 1]
type = Normal
spriteno = 4, 1 ;Sprite group and number: groupno, imgno  (req'd)
start = 0, 198
delta = 1, 1
layerno = 1
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0


;----------
[BG 2 floor]
type = Normal
spriteno = 4, 0 ;Sprite group and number: groupno, imgno  (req'd)
start = 0, 190
delta = 1, 1
layerno = 1
mask = 1
velocity = 0, 0
tile = 1, 0
tilespacing = 0, 0


;----------
[BG Light Tall]
type  = anim
actionno = 0
start = -360, 150
delta = 1, 1
mask = 1
velocity = 0, 0
layerno = 1
tile = 0, 0

;----------
[BG Light Tall]
type  = anim
actionno = 0
start = 328, 150
delta = 1, 1
mask = 1
velocity = 0, 0
layerno = 1
tile = 0, 0



;------------------------------------
;Animations
;------------------------------------

;Tall Light
[Begin Action 0]
5,0, 0,0, 15
5,1, 0,0, 8
5,2, 0,0, 8
5,3, 0,0, 8


;Small Light 1
[Begin Action 1]
6,0, 0,0, 10
6,1, 0,0, 8
6,2, 0,0, 8
6,3, 0,0, 8
-1,-1, 0,0, 5


;Travelator
[Begin Action 3]
7,2, 0,0, 2
7,1, 0,0, 2
7,0, 0,0, 2
7,2, 0,0, 2
7,1, 0,0, 2
7,0, 0,0, 2
